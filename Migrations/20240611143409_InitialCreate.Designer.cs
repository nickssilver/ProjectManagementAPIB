// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManagementAPIB.Data;

#nullable disable

namespace ProjectManagementAPIB.Migrations
{
    [DbContext(typeof(ProjectManagementContext))]
    [Migration("20240611143409_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectManagementAPIB.Models.County", b =>
                {
                    b.Property<int>("CountyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountyID"));

                    b.Property<string>("CountyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCounty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountyID");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("ProjectManagementAPIB.Models.Institution", b =>
                {
                    b.Property<string>("InstitutionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AwardLeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountyID")
                        .HasColumnType("int");

                    b.Property<string>("InstitutionContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LicenseEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LicenseStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StatusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubCounty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstitutionID");

                    b.HasIndex("CountyID");

                    b.HasIndex("StageID");

                    b.HasIndex("StatusID");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("ProjectManagementAPIB.Models.InstitutionStage", b =>
                {
                    b.Property<string>("StageID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StageID");

                    b.ToTable("InstitutionStages");
                });

            modelBuilder.Entity("ProjectManagementAPIB.Models.InstitutionStatus", b =>
                {
                    b.Property<string>("StatusID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("InstitutionStatuses");
                });

            modelBuilder.Entity("ProjectManagementAPIB.Models.Institution", b =>
                {
                    b.HasOne("ProjectManagementAPIB.Models.County", "County")
                        .WithMany("Institutions")
                        .HasForeignKey("CountyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectManagementAPIB.Models.InstitutionStage", "Stage")
                        .WithMany("Institutions")
                        .HasForeignKey("StageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectManagementAPIB.Models.InstitutionStatus", "Status")
                        .WithMany("Institutions")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("County");

                    b.Navigation("Stage");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ProjectManagementAPIB.Models.County", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("ProjectManagementAPIB.Models.InstitutionStage", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("ProjectManagementAPIB.Models.InstitutionStatus", b =>
                {
                    b.Navigation("Institutions");
                });
#pragma warning restore 612, 618
        }
    }
}
